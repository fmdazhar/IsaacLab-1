params:  

  seed: 42

  # environment wrapper clipping
  env:
    clip_actions: 1.0

  algo:
    name: sac

  model:
    name: soft_actor_critic

  network:
    name: soft_actor_critic
    separate: True
    space:
      continuous:
    mlp:
      units: [512, 256, 128]
      # units: [256, 256]

      activation: relu
      
      initializer:
        name: default
    log_std_bounds: [-5, 2]

    num_critics: 2
    use_dropout: True
    dropout_prob: 0.1
    normalization: layer_norm


  load_checkpoint: False # flag which sets whether to load the checkpoint
  load_path: '' # path to the checkpoint to load

  config:
    name: anymal_c_flat
    env_name: rlgpu
    device: 'cuda:0'
    device_name: 'cuda:0'
    multi_gpu: False
    normalize_input: True
    reward_shaper:
      scale_value: 1.0
    max_epochs: 50000
    num_steps_per_episode: 8
    save_best_after: 100
    save_frequency: 1000
    gamma: 0.99
    init_alpha: 1.0
    alpha_lr: 0.2
    actor_lr: 0.0003 #0.0005
    critic_lr: 0.0003 ##0.0005
    critic_tau: 0.005 #0.005
    batch_size: 4096
    target_entropy: -12
    learnable_temperature: true
    num_seed_steps: 5
    num_warmup_steps: 50
    replay_buffer_size: 1000000
    num_actors: -1  # configured from the script (based on num_envs)

    # REDQ-Specific Parameters (if using REDQ variant)
    num_critics: 2
    critic_subsample_size: 2
    q_target_mode: 'min'

    # Additional training and logging settings
    gradient_steps: 20
    policy_delay: 20
    policy_delay_offset: 1
    score_to_win: 1000
    log_frequency: 100  # Logging frequency for TensorBoard or other monitoring
    max_env_steps: 1000  # Temporary, adjust as needed
    target_entropy_coef: 1.0  # Scaling factor for entropy target

